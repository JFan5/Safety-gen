Based on the provided domain and problem, I will generate a valid, grounded, totally-ordered plan.

The initial state is:
(arm-empty)
(on b1 b4)
(on b2 b1)
(on b3 b2)
(on-table b4)
(clear b3)

The goal is:
(and
(on-table b1)
(on-table b2)
(on b3 b2)
(on b4 b1))

The constraints are:
(sometime-before (on-table b2) (on-table b1))

Here is the plan:

(pick b3 b2)
(stack b3 b2)
(drop b3 b2)
(pick b4 b1)
(stack b4 b1)
(drop b4 b1)
(pick b1 b2)
(stack b1 b2)
(drop b1 b2)
(pick b2 b3)
(stack b2 b3)
(drop b2 b3)
(pick b1 b4)
(stack b1 b4)
(drop b1 b4)
(pick b2 b3)
(stack b2 b3)
(drop b2 b3)
(pick b1 b2)
(stack b1 b2)
(drop b1 b2)
(pick b3 b2)
(stack b3 b2)
(drop b3 b2)
(pick b4 b1)
(stack b4 b1)
(drop b4 b1)

Note that the plan is not optimal, but it satisfies the goal and constraints.