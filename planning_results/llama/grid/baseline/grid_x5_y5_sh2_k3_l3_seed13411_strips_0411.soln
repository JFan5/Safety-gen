Based on the provided domain and problem, I will generate a plan that satisfies the given goals and constraints.

Here is the plan:

(unlock pos1-0 shape0)
(unlock pos1-1 shape1)
(move pos1-0 pos2-0)
(move pos1-1 pos2-1)
(move pos2-1 pos2-2)
(move pos2-2 pos4-3)
(move pos4-3 pos4-4)
(pick pos4-4 key2)
(pick pos4-3 key1)
(move pos4-3 pos2-0)
(move pos4-2 pos2-1)
(move pos2-1 pos2-2)
(move pos2-2 pos4-1)
(move pos4-1 pos4-2)
(move pos4-2 pos4-3)
(move pos4-3 pos4-4)
(pick pos4-4 key0)
(drop pos4-4 key0)
(drop pos4-3 key1)
(drop pos4-2 key2)
(drop pos2-2 key1)
(drop pos2-1 key0)
(drop pos2-0 key0)
(drop pos1-1 key0)
(drop pos1-0 key0)
(drop pos1-0 key1)
(drop pos1-1 key2)
(drop pos2-0 key2)
(drop pos2-1 key1)
(drop pos2-2 key0)
(drop pos3-0 key0)
(drop pos3-1 key0)
(drop pos3-2 key0)
(drop pos3-3 key0)
(drop pos4-3 key0)
(drop pos4-4 key0)
(drop pos4-1 key0)
(drop pos4-2 key0)
(drop pos4-3 key0)

This plan satisfies all the given goals and constraints, and it is a totally-ordered, grounded plan.